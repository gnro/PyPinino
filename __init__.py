# -*- coding: utf-8 -*-
"""
/***************************************************************************
 cats
                                 A QGIS plugin
 Gato guardian
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-08-21
        copyright            : (C) 2023 by nemo
        email                : nemo@sea.co
        git sha              : $Format:%H$
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
 This script initializes the plugin, making it known to QGIS.
"""
from qgis.PyQt.QtGui import *
from qgis.PyQt.QtCore import *
from qgis.gui import QgsProjectionSelectionDialog
from qgis.core import QgsProject  # Importa QgsProject desde qgis.core

valorD = "-"

def setProjectCrs():
    valorD = QgsProject.instance().fileName()

def setProjectCrs(iface):
    classFactory(iface, valorD)

# noinspection PyPep8Naming
def classFactory(iface):
    
    from .CatWatch import cats
    '''  return  '''
    #global valorD
    ProjectCrsPlugin(iface)
    
    #print("EL valor es:")
    #print(f'setProjectCrs; El archivo es: {str(valorD)}')
    #print(" classFactory")
    #if valorD=="":
    #    valorD="VaciAAAAAo"
    return cats(iface,str(QgsProject.instance().fileName() ) )

class ProjectCrsPlugin:
    def __init__(self, iface):
        try:
            
            print("EL valor es:"+QgsProject.instance().fileName())
            #iface.projectRead.connect(self.setProject)
            iface.projectRead.connect(setProjectCrs(iface))
            print("Se cargo el plugin")
            '''
            from PyQt5.QtWidgets import QMessageBox
            QMessageBox.critical(self.iface.mainWindow(), "Error", "Usuario.: Ya "+fue)
            '''
            
            from qgis.core import QgsProject
            print(str(QgsProject.instance().fileName())) 
            toolbar = QToolBar('Main ToolBar')
            # File toolbar
            fileToolBar = self.addToolBar(toolbar )
            fileToolBar.setMovable(True)
        except Exception as e:
            print(f'Error al realizar la accede: {str(e)}')

    def initGui(self):
        pass

    def unload(self):
        self.iface.newProjectCreated.disconnect(setProjectCrs)  # Cambia esto para desconectar la se√±al correctamente
    
    def setProject(self):
        valorD
        valorD = QgsProject.instance().fileName()
        print(f'El archivo es: {str(valorD)}')
